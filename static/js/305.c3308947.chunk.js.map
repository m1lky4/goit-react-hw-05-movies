{"version":3,"file":"static/js/305.c3308947.chunk.js","mappings":"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","sources":["components/API/getMovies.js","webpack://goit-react-hw-05-movies/./src/components/Pages/MovieDetails.module.css?a892","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = 'a986bb655e026ac8399dc737bac9fcf3';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get('/trending/all/week', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"MovieDetails_goBack__VNF-O\",\"detailsWrapper\":\"MovieDetails_detailsWrapper__uZpTm\",\"genres\":\"MovieDetails_genres__JY6+e\",\"personImg\":\"MovieDetails_personImg__F00yd\",\"castList\":\"MovieDetails_castList__dJl-s\",\"castListItem\":\"MovieDetails_castListItem__KdFER\",\"informationWrapper\":\"MovieDetails_informationWrapper__xo2ir\",\"link\":\"MovieDetails_link__uyYG3\",\"author\":\"MovieDetails_author__s4k4U\"};","import { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  getMovieDetails,\n  getMovieReviews,\n  getMovieCast,\n} from 'components/API/getMovies';\nimport s from './MovieDetails.module.css';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [cast, setCast] = useState([]);\n  const [showReviews, setShowReviews] = useState(false);\n  const [showCast, setShowCast] = useState(false);\n  const [showLayout, setShowLayout] = useState(true);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await getMovieDetails(movieId);\n        setMovie(movieDetails);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (location.pathname === `/movies/${movieId}`) {\n      setShowReviews(false);\n      setShowCast(false);\n    }\n    if (location.pathname === `/movies/${movieId}`) {\n      setShowCast(false);\n      setShowReviews(false);\n    }\n    fetchMovieDetails();\n  }, [movieId, location]);\n\n  const handleShowReviews = async () => {\n    try {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews.results);\n      setShowReviews(true);\n      setShowCast(false);\n      setShowLayout(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleShowCast = async () => {\n    try {\n      const movieCast = await getMovieCast(movieId);\n      setCast(movieCast.cast);\n      setShowCast(true);\n      setShowReviews(false);\n      setShowLayout(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleGoBack = () => {\n    if (showReviews) {\n      setShowReviews(false);\n      setShowCast(true);\n    } else if (showCast) {\n      setShowCast(false);\n      setShowReviews(true);\n    }\n    setShowLayout(true);\n    navigate(-1);\n  };\n  if (!showLayout) {\n    return null;\n  }\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <button className={s.goBack} onClick={handleGoBack}>\n        &larr; Go Back\n      </button>\n      <div className={s.detailsWrapper}>\n        {movie.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title || movie.name}\n            className={s.detailsPoster}\n          />\n        )}\n        <div>\n          <h2>{`${movie.title || movie.name} (${movie.release_date.slice(\n            0,\n            4\n          )})`}</h2>\n          <p>User Score: {Math.floor(movie.vote_average * 10)}%</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <ul className={s.genres}>\n              {movie.genres.map(el => (\n                <li key={el.id}>\n                  <p>{el.name}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className={s.informationWrapper}>\n        <p>Additional information</p>\n        <Link\n          className={s.link}\n          to={`/movies/${movieId}/cast`}\n          onClick={handleShowCast}\n        >\n          Cast\n        </Link>\n        <Link\n          className={s.link}\n          to={`/movies/${movieId}/reviews`}\n          onClick={handleShowReviews}\n        >\n          Reviews\n        </Link>\n      </div>\n      {showCast && (\n        <div>\n          {cast.length > 0 ? (\n            <ul className={s.castList}>\n              {cast.map(\n                person =>\n                  person.profile_path && (\n                    <li key={person.id} className={s.castListItem}>\n                      <img\n                        src={`https://image.tmdb.org/t/p/w200${person.profile_path}`}\n                        alt={person.name}\n                        className={s.personImg}\n                      />\n                      <div>\n                        <p>{person.name}</p>\n                        <p>Character: {person.character}</p>\n                      </div>\n                    </li>\n                  )\n              )}\n            </ul>\n          ) : (\n            <p>No cast information available.</p>\n          )}\n        </div>\n      )}\n      {showReviews && (\n        <div>\n          {reviews.length > 0 ? (\n            <ul>\n              {reviews.map(review => (\n                <li key={review.id}>\n                  <p className={s.author}>Author: {review.author}</p>\n                  <p>{review.content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No reviews available.</p>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","console","log","searchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","MovieDetails","location","useLocation","useParams","navigate","useNavigate","useState","movie","setMovie","reviews","setReviews","cast","setCast","showReviews","setShowReviews","showCast","setShowCast","showLayout","setShowLayout","useEffect","fetchMovieDetails","movieDetails","pathname","handleShowReviews","movieReviews","results","handleShowCast","movieCast","className","s","onClick","poster_path","src","alt","title","name","release_date","slice","Math","floor","vote_average","overview","genres","map","el","id","to","length","person","profile_path","character","review","author","content"],"sourceRoot":""}